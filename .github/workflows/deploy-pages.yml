name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Auto optimize images & generate sitemap"]
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: (optional) Install deps
        run: npm ci --prefer-offline --no-audit --progress=false || true

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq || true

      - name: Refresh social debuggers and SEO crawlers
        env:
          SITE_DOMAIN: "https://pay24.store"
          FB_TOKEN: ${{ secrets.FB_APP_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          echo "üîç Collecting post URLs from posts.json"
          urls="$SITE_DOMAIN"
          
          # Add new visamastercard page
          urls="$urls $SITE_DOMAIN/visamastercard/virtualvisa-prepaid"
          
          if [ -f posts.json ]; then
            post_urls=$(jq -r '.[]?.url' posts.json || echo "")
            while read -r p; do
              [ -z "$p" ] && continue
              # normalize: ensure leading slash
              if [[ "$p" != /* ]]; then p="/$p"; fi
              urls="$urls $SITE_DOMAIN$p"
            done <<< "$post_urls"
          fi
          
          echo "üöÄ Will refresh these URLs:"
          for u in $urls; do echo "   - $u"; done
          
          for u in $urls; do
            echo "üìÑ Processing $u"
            
            # Facebook Open Graph scraping
            if [ -n "${FB_TOKEN:-}" ]; then
              echo "   üìò Facebook: Triggering OG scrape"
              curl -s -X POST "https://graph.facebook.com" \
                -d "id=$u" \
                -d "scrape=true" \
                -d "access_token=$FB_TOKEN" || echo "   ‚ùå Facebook scrape failed"
            else
              echo "   ‚è≠Ô∏è  Facebook: No token provided, skipping"
            fi
            
            # LinkedIn post inspector refresh (no auth needed)
            echo "   üíº LinkedIn: Triggering cache refresh"
            curl -s -X POST "https://www.linkedin.com/post-inspector/inspect/" \
              -d "url=$u" || echo "   ‚ùå LinkedIn refresh failed"
            
            # Twitter/X card validator refresh
            echo "   üê¶ Twitter: Triggering card refresh"
            curl -s -I "https://cards-dev.twitter.com/validator" \
              -H "Referer: $u" || echo "   ‚ùå Twitter refresh failed"
            
            # Encourage search engine crawling
            echo "   ü§ñ Search Engines: Encouraging crawl"
            curl -s -I "$u" \
              -H "User-Agent: Mozilla/5.0 (compatible; SEO-Bot/1.0)" \
              -o /dev/null || echo "   ‚ùå Crawl encouragement failed"
            
            # Rate limiting to be respectful
            sleep 2
          done
          
          echo "‚úÖ Social debugger refresh completed"
